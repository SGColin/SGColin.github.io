<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Counting Tricks</title>
      <link href="2019/12/29/count-in-gk/"/>
      <url>2019/12/29/count-in-gk/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>做高考计数题的时候发现 OI 里的一些东西挺好用。</p><p>简单整理一下，可能对于高考略超纲，但是不难上手。</p><a id="more"></a><h2 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h2><p>内容很基础，但是我想说的是，计数题的计算公式还是从实际意义去理解比较好。</p><ul><li><p><strong>排列 (Permutation)</strong><br>$$<br>P_{n}^m=\frac{n!}{(n-m)!}<br>$$<br>从 $n$ 个不同的元素里，选出 $m$ 个进行全排列的方案数。</p><p>分子 $n!$ 的含义是 $n$ 个元素的全排列，其中有 $n-m$ 个是不需要的，因此他们的顺序没有意义，去掉不同顺序带来的计数，除掉 $n-m$ 的全排列数 $(n-m)!$ </p></li><li><p><strong>组合 (Combination)</strong><br>$$<br>C_n^m=\frac{n!}{m!(n-m)!}<br>$$<br>从 $n$ 个不同的元素里，选出 $m$ 个组成一个集合的方案数。</p><p>相当于排列数中的 $m$ 个元素去掉顺序，即 $P_n^m$ 再除掉 $m$ 的全排列数 $m!$</p></li><li><p><strong>顺序化与去顺序</strong></p><p>从排列数和组合数的定义可以看出，排列的顺序带来了更多的方案数；</p><p>而组合的选取集合无序性，使得方案数去掉了 $m$ 个元素内部顺序。</p><p>我们可以笼统的归纳出：$m$ 个元素有顺序的方案数 $=$ 无顺序的方案数 $\times \ m!$</p><p>这样就可以很好地解释一个恒等式：$P_n^m=C_n^m\times m!$</p><p>有序与无序的转换可以通过乘或除全排列来实现，这个思想后面我们还会用到。</p></li><li><p><strong>一个组合恒等式</strong><br>$$<br>C_n^m=C_{n-1}^{m-1}+C_{n-1}^m<br>$$<br>含义是，从 $n$ 个不同的元素里，选出 $m$ 个组成一个集合的方案，可以由两种情况发展而来：</p><ol><li>选上第 $n$ 个元素，前 $n-1$ 个元素中选取 $m-1$ 个。</li><li>不选第 $n-1$ 个元素，前 $m-1$ 个元素中选取 $m$ 个。</li></ol><p>这种<strong>增量的思维，即单独考虑第 $n$ 个元素的选取策略</strong>的思考方式很重要，在后面也还会用到。</p></li></ul><h2 id="全错位排列"><a href="#全错位排列" class="headerlink" title="全错位排列"></a>全错位排列</h2><p>指 $n$ 个不同元素的全排列，使得对于任何 $i(i\in[1,n])$ ，满足第 $i$ 个位置上的数不是 $i$ 的排列数。</p><p>其通项公式确实不太好记忆，但是递推公式非常好记忆：</p><p>$$<br>D_1 = 0\ ,\ D_2 = 1\ ,\ D_n=(n-1)(D_{n-1}+D_{n-2})\ (n\ge 3)<br>$$</p><p>公式的含义是，当 $n\ge 3$ 时，用增量的思维，单独考虑数字 $n$ 在排列中的位置。</p><p>不妨设 $n$ 排在了第 $k$ 位，其中 $k\not = n$，也就是 $k\in [1,n-1]$，这是考虑第 $n$ 位的情况：</p><ol><li>当数字 $k$ 排在第 $n$ 位时，除了 $n$ 和 $k$ 以外还有 $n-2$ 个数，其错排数为 $D_{n-2}$。</li><li>当 $k$ 不排在第 $n$ 位时，那么将第 $n$ 位重新考虑成一个新的“第 $k$ 位”，这时的包括 $k$ 在内的剩下 $n-1$ 个数的每一种错排，都等价于只有 $n-1$个数时的错排（只是其中的第 $k$ 位会换成第 $n$ 位），其错排数为 $D_{n-1}$。</li></ol><p>这两种情况是独立的，而 $k$ 的选取又有 $n-1$ 种，所以 $D_n=(n-1)(D_{n-1}+D_{n-2})$</p><h2 id="卡特兰数"><a href="#卡特兰数" class="headerlink" title="卡特兰数"></a>卡特兰数</h2><p>  <del>会了这个在 2016 年的高考题里选择压轴 12 题你就可以一秒算出。</del></p><p>  这个数列的含义有很多，这里先给出公式再解释：<br>$$<br>  \begin{align}<br>  H_n=\frac{C_{2n}^{n}}{n+1}=\frac{\prod_{i=n+2}^{2n}i}{n!}\end{align}<br>$$</p><p>  比较常见的一种定义是：从原点 $(0,0)$ 到点 $B(n,n)$ ，只能向右或向上进行长度为一个单位的移动，<strong>路线一直处于 $y=x$ 之下</strong>的方案数；</p>  <img src="https://i.loli.net/2019/12/13/S9WAc7rw3qEuVKz.png" style="zoom:67%;" /><ol><li><p>总共需要走的步数为 $2n$ 步，而向右一共要走 $n$ 步，故总的方案数为 $C_{2n}^{n}$ 。</p></li><li><p>不合法的方案即为越过 $y=x$ 的路径数，考虑将每一个不合法的方案中从 $(0,0)$ 到<strong>第一个</strong>越过 $y=x$ 的点这一部分的路径关于 $y=x+1$对称，其余部分不变。我们发现，每一个不合法的路径都一一映射到了一个从 $(-1,1)$ 到 $(n,n)$ 的路径，那么不合法的方案数即为从 $(-1,1)$ 走到 $(n,n)$ 的方案数，因为一共向上要走$n-1$步，向右一共要走$n+1$步，所以不合法的方案数为 $C_{2n}^{n-1}$或 $C_{2n}^{n+1}$。</p></li><li><p>做一个减法，整理一下就得到了公式：</p></li></ol><p>$$<br>H_n=C_{2n}^n-C_{2n}^{n-1}=C_{2n}^n - C_{2n}^{n}\times \frac{n}{n+1}=\frac{C_{2n}^{n}}{n+1}<br>$$</p><p>Catalan 数还有以下几中比较常见的解释：</p><ul><li><p>$n$ 个 $0$ 与 $n$ 个 $1$ 构成的序列，使得任何一个前缀 $0$ 的个数不少于 $1$ 的方案数。</p><p>也就是  16 年高考题的题面啦，把 $0$ 当作向右走一步，把 $1$ 当作向上走一步，就可以解释了。</p></li><li><p>给定 $n$ 对括号，求所有括号正确配对的括号序列数。</p><p>把左括号当作向右走一步，把右括号当作向上走一步，就可以解释了。</p></li><li><p>将一个 $n+2$ 条边的凸多边形，通过若干条互不相交的对角线，划分成 $n$ 个三角形的方案数。</p><p>这个用组合数学不太好解释，想听的同学找我吧…</p></li></ul><h2 id="第二类斯特林数"><a href="#第二类斯特林数" class="headerlink" title="第二类斯特林数"></a>第二类斯特林数</h2><p>第一类 Stirling 数貌似用处不太大就先不讲了…</p><p>第二类 Stirling 数是一个二维数表，$S_n^m$ 表示将 $n$ 个不同的元素，划分成 $m$ 个不同的非空集合的方案数。<br>$$<br>S_n^m=S_{n-1}^{m-1}+m\times S_{n-1}^m<br>$$<br>同样以增量的角度思考递推式的形式。</p><ul><li>如果第 $n$ 个元素单独作为一个集合，则方案唯一，剩下的部分组成 $m-1$ 个集合，贡献为 $S_{n−1}^{m−1}$ 。 </li><li>如果第 $n$ 个元素加入之前的集合，那么有 $m$ 个集合可以选择，贡献是 $m\times S_{n-1}^m$ 。</li></ul><p>对于一些边界的情况很容易得到结论：<br>$$<br>S_n^0=0,S_n^1=1,S_n^n=1,S_n^m=0(m&gt;n)<br>$$<br>所以简单的二维数表也就不难推出：</p><table><thead><tr><th align="center">n\m</th><th align="center">0</th><th align="center">1</th><th align="center">2</th><th align="center">3</th><th align="center">4</th><th align="center">5</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">0</td><td align="center">1</td><td align="center">0</td><td align="center">0</td><td align="center">0</td><td align="center">0</td></tr><tr><td align="center">2</td><td align="center">0</td><td align="center">1</td><td align="center">1</td><td align="center">0</td><td align="center">0</td><td align="center">0</td></tr><tr><td align="center">3</td><td align="center">0</td><td align="center">1</td><td align="center">3</td><td align="center">1</td><td align="center">0</td><td align="center">0</td></tr><tr><td align="center">4</td><td align="center">0</td><td align="center">1</td><td align="center">7</td><td align="center">6</td><td align="center">1</td><td align="center">0</td></tr><tr><td align="center">5</td><td align="center">0</td><td align="center">1</td><td align="center">15</td><td align="center">25</td><td align="center">10</td><td align="center">1</td></tr></tbody></table><p>用法在后面我们会提到。</p><h2 id="隔板法"><a href="#隔板法" class="headerlink" title="隔板法"></a>隔板法</h2><p>核心的思想是两句话：</p><ol><li>每两个相邻的板构成一个盒子。</li><li>板是相同的，盒子是不同的。板之间形成的空隙的顺序完成了的对盒子不同的要求，把盒子变成板实质为“去顺序”</li></ol><p>操作的方法有两种，分别是插空法和排列法，我们在下面的小球装箱中，利用前两种情况的问题进行说明。</p><h2 id="小球装箱"><a href="#小球装箱" class="headerlink" title="小球装箱"></a>小球装箱</h2><p>由球、盒子是否相同，盒子是否可空组合成的八种问题。</p><p>鉴于是面向高考题目的一份总结，这里只说六种比较好操作的情况。</p><p>问题格式为，有 $n$ 个（同/不同）的球，放到 $m$ 个（同/不同）的盒子中，要求盒子（可以/不可以）空。</p><p>这里先给出问题的答案，再逐一说明。</p><table><thead><tr><th align="center">球</th><th align="center">盒</th><th align="center">是否可空</th><th align="center">Answer</th></tr></thead><tbody><tr><td align="center">同</td><td align="center">不同</td><td align="center">不可空</td><td align="center">$C_{n-1}^{m-1}$</td></tr><tr><td align="center">同</td><td align="center">不同</td><td align="center">可空</td><td align="center">$C_{n+m-1}^n$</td></tr><tr><td align="center">不同</td><td align="center">同</td><td align="center">不可空</td><td align="center">$S_n^i$</td></tr><tr><td align="center">不同</td><td align="center">同</td><td align="center">可空</td><td align="center">$\sum_{i=1}^mS_n^i$</td></tr><tr><td align="center">不同</td><td align="center">不同</td><td align="center">不可空</td><td align="center">$S_n^m\times P_m^m$</td></tr><tr><td align="center">不同</td><td align="center">不同</td><td align="center">可空</td><td align="center">$m^n$</td></tr></tbody></table><ul><li><p>球同，盒子不同，盒子不可以空。</p><p>思路是隔板法的第一种，<strong>插空法</strong>。</p><p>有 $m$ 个盒子，每两个相邻的板构成一个盒子，所以需要放 $m+1$ 个板。</p><p>首先我们在 $n$ 个球的两侧放上两个板，代表左右边缘两个盒子的一侧。</p><p>那么剩下就要再插入 $m-1$ 个板，板和板之间不能相邻，也就是每两个球的空隙之间只能放一个板。</p><p>有 $n-1$ 个空隙，选出来 $m-1$ 个即可，方案数为 $C_{n-1}^{m-1}$。</p></li><li><p>球同，盒子不同，盒子可以空。</p><p>思路是隔板法的第二种，<strong>排列法</strong>。</p><p>同样有 $m$ 个盒子，每两个相邻的板构成一个盒子，所以需要放 $m+1$ 个板。</p><p>同样首先需要在 $n$ 个球的两侧放上两个板，代表左右边缘两个盒子的一侧。</p><p>那么剩下就要再插入 $m-1$ 个板，但这次板和板之间可以相邻，中间不隔着球的两个板代表一个空盒子，每个球球间空隙可以放任意多个板。</p><p>这是我们相当于要得到一个包含 $n$ 个球和 $m-1$ 个板的排列，由于球之间相同，板之间相同，所以只需要从 $n+m-1$ 个位置里选出 $n$ 个位置放球即可，方案数为 $C_{n+m-1}^n$，当然也可以从板的角度，写成 $C_{n+m-1}^{m-1}$。</p></li><li><p>球不同，盒子相同，盒子不可以空。</p><p>这个问题就是第二类 Stirling 数的定义，将 $n$ 个不同的元素，划分成 $m$ 个不同的非空集合的方案数，所以答案是 $S_n^m$。</p></li><li><p>球不同，盒子相同，盒子可以空。</p><p>我们假设有 $i(i\in [1,m])$ 个盒子非空的，由于盒子相同，此时的答案为 $S_n^i$。</p><p>由于非空的盒子数不同的情况之间独立，所以答案是 $\sum_{i=1}^mS_n^i$。</p></li><li><p>球不同，盒子不同，盒子不可以空。</p><p>此问题相当于是第三个问题的<strong>顺序化</strong>，也就是原本相同的盒子变成不同的了，需要乘上一个不同顺序带来的情况数，所以按照顺序化的操作得到答案为 $S_n^m\times P_m^m$。</p></li><li><p>球不同，盒子不同，盒子可以空。</p><p>球之间的决策是独立的，每个球有 $m$ 个不同的盒子选，不需要考虑是否导致盒子空，方案数为 $m^n$。</p></li></ul><br>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTS &amp; APIO 2019</title>
      <link href="2019/05/14/cts-apio2019/"/>
      <url>2019/05/14/cts-apio2019/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>因为已经退役了，这篇流水账写起来比较轻松有趣。</p><p>OI 生涯中最后一篇游记了啊，还是要写的详细些好。</p><a id="more"></a><h2 id="言论"><a href="#言论" class="headerlink" title="言论"></a><span id="jump">言论</span></h2><p>以下部分引用摘自 <a href="https://www.zhihu.com/question/315351707">如何评价CTS2019/APIO2019？ - 知乎</a> 。</p><p>CTS 闭幕式 wh 发言</p><blockquote><p>就在 $5$ 年之前，$2013$ 年的 CTSC…</p><p>有趣的题目背景，简短的题面，概括了计数，计数，计数，计数以及计算几何和乱搞等知识点…</p><p>这次的提交答案题，考察了以贪心，搜索等基本算法，以及策略上的优化，不再是十合一…</p><p>有些非集训队选手发挥突出，来自历城二中的 rqy，是全场唯一获得高于 400 分成绩的选手…</p><p>令人惊喜的是，有来自<strong>江西</strong>，广西，贵州，黑龙江，新疆等<strong>边远省份</strong>的选手…</p></blockquote><p>CTS 闭幕式 dzd 发言</p><blockquote><p>我们今年的选拔赛，少了一个字母 C ， C 就是 competition 。为什么 C 没了呢？好，给你们直说吧，如果是赛，就不让收费，不让收费呢，CCF 是没钱的，没有一分钱的政府的拨款…</p><p>CCF要坚持下去，我也会坚持下去。如果我实在达不到目的，如果被悲催了，被屈辱了，我只能辞职而去，但绝不就范，绝对不为那些失掉真理，失掉正义和骨气…</p></blockquote><h2 id="Day-0"><a href="#Day-0" class="headerlink" title="Day 0"></a>Day 0</h2><p>七点从学校出发，坐公交，和老师在火车站碰面。</p><p>把开车时间往后记了半小时，刚到站已经检票有一阵了，被教练D了一会。</p><p>路上老 R 问起省选之后有没有碰电脑，并不敢说没有，装作看了板子的样子。</p><p>老 R 毒奶说我还是有希望水一个 Cu 的（然而并不 care 有没有奖了</p><p>剩下火车上的时间用来思考文化课生活。</p><hr><p>到了宾馆大厅办入住，等的时候看见了万总，已然进队风光无限。</p><p>和 mqt 聊了聊退役之后的高考生活，神仙现场测词汇量 8000+ 膜爆。</p><p>下午在宾馆里颓到五点多才去试机，发现自己连语法都快不会了。</p><p>晚上撞见了从 THUPC 赶来的神仙们，听说 THUPC 是 OI 场？</p><h2 id="Day-1"><a href="#Day-1" class="headerlink" title="Day 1"></a>Day 1</h2><p>考场 408 ，监考好像是 LCA 和 栋栋（栋栋的衣服上印着雀魂</p><p>退役了已然推不动计数式子了啊，跳了 T1 T2 。</p><p>手画了一个小时，把 T3 前30分搞到手，然后敲了个随机，后七个点搞了几分。</p><p>十点多的时候开了三四个 Emacs 电脑就死机了，栋栋找来 LCA 给重启了。</p><p>吃了考场餐，和 Emacs 下了一会棋，打不赢就睡到了考试结束。</p><p>估计在 45 左右，肯定没牌子了，就没去查分和听讲题。</p><h2 id="Day-2"><a href="#Day-2" class="headerlink" title="Day 2"></a>Day 2</h2><p>考场 GYM，坐在大门口没法颓了慌慌慌。监考好像是高闻远。</p><p>什么神仙计算几何我只会输0啊…</p><p>串串计数爆搜复杂度好像过不了第一个点啊…</p><p>这么长的网友题做不动啊…</p><p>对面老哥一直拿鼻孔对着我…为啥他总在仰望天空啊…</p><p>然后和 Emacs 博弈到发考场餐，没有士力架差评。 </p><p>打不过正自闭的时候，突然想到我可以开两个 Emacs，一个先手一个后手然后模仿他下，我就可以稳赢一局了（我真是个小天才</p><p>然后百无聊赖睡到结束，依旧没有去查分听讲题。</p><h2 id="Day-3"><a href="#Day-3" class="headerlink" title="Day 3"></a>Day 3</h2><p>像集训队答辩这种喜闻乐见的项目作为退役选手显然要去啊！</p><blockquote><p>我叫 dzd，zzq你如果没进队你会怎么想？（明年再来）</p><p>你校自 1996 年以来怎么 23 年没人去过 IOI ？</p><p>你的题为什么有一个 1 分的 subtask (duliu) ？</p></blockquote><p>结束的时候用尽浑身解数，成功抢到了多余的论文集（退役纪念品++</p><hr><p>路上突然想到论文集上收集一些签名好像挺有纪念意义的，所以晚上闭幕式显然也要去啊！</p><p>国队跟我中午猜的一样，zy 好可惜啊准备 zj 省选把国家队整没了…</p><p>闭幕式上的发言还是挺好玩的，参见开头的 <a href="#jump">言论</a></p><p>然后小透明激动的跑过去要国队签名！</p><p>samjia：诶修的名字比我的好写很多啊…那我写个修吧！</p><p>zzq：写修很简单啊…那我也可以啊!</p><p>wxh：那我写个…写个我自己吧…</p><p>（当时yjz好像不在）</p><p>然后在论文集上就留下了修们的签名！作为退役纪念品完美啊。</p><p><img src="https://i.loli.net/2019/06/06/5cf88ae7ac9ae23183.jpg"></p><h2 id="Day-4"><a href="#Day-4" class="headerlink" title="Day 4"></a>Day 4</h2><p>在宾馆摸爆，在 czy 的帮助下把博客的锅修了。</p><p>下午试机切了前三个，然后从 UOJ 上找了个 T5 的代码过了。</p><h2 id="Day-5"><a href="#Day-5" class="headerlink" title="Day 5"></a>Day 5</h2><p>并不想去听课，于是在宾馆颓颓颓…</p><h2 id="Day-6"><a href="#Day-6" class="headerlink" title="Day 6"></a>Day 6</h2><p>又在 408，监考是 Samjia ，旁边坐的是 Day 2 一直仰天长啸的哥们。</p><p>T1 敲了 29 分暴力+线段树，感觉不带修的要写重构树弃了。</p><p>T2 敲了 10 分暴力，推不动式子，这么神仙的题为啥毛子要放到 T1 啊搞不懂…</p><p>T3 敲了 60 分暴力+线段树+序列并查集，后面的不会了。</p><p>纠结了好久 T2 ，还是决定去写 T1 的重构树，写了一个多小时调不出来，交 WA 了，准备睡觉。</p><p>吃完考场餐，突然发现 T1 好像可以离线并查集把 subtask 4 水过去，然后十分钟敲完过了…</p><p>然后和 Emacs 下棋，还是下不赢，旁边早早 AK 的小哥于是开了一盘 Emacs 开始表演</p><p>然后他就赢了….就赢了….感觉自己的智商嘲讽了啊…</p><p>出考场发现一堆 113 的，估计 APIO 也没牌了，就没去听讲题。</p><p>（后来听温巨讲了讲发现 T2 是个 sb 题…淦… T2 的 90 就是Au 和 Cu 的差距啊…</p><h2 id="Day-7"><a href="#Day-7" class="headerlink" title="Day 7"></a>Day 7</h2><p>依旧没有去听课，中午收到消息下午回学校。</p><p>于是在北京西站吃的麦记，用的现金被收银员鄙视了一波…</p><p>火车上得知好像擦线水了一个 Cu (感谢老R</p><p>窗外的落日很好看啊….</p><p><img src="https://i.loli.net/2019/06/06/5cf88a0b581a439686.jpg"></p><blockquote><p>Last night I saw you running<br>In the open fields of grace<br>No longer were you broken or in pain</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Memoirs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEOI 2019</title>
      <link href="2019/04/12/heoi2019/"/>
      <url>2019/04/12/heoi2019/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>OI 生涯就这样恍恍惚惚的在 HEOI 2019 走到了终点。</p><p>简单的写两笔吧，算是让这个博客完整一些，也算作是警醒后人。</p><a id="more"></a><hr><p>考前有些焦虑过头，还是决定让妈妈去陪考。</p><p>第一天迷糊了三个小时，然后就结束了，第二天没能翻盘。</p><p>考试的题目除了 Day1 T3 有些不太好接受以外都还挺好的，最后是被两天 T2 送退役的。</p><p>最后的总分是 $85+0+12+20+60+8=185$ 。</p><p>说说失分的原因吧：</p><ul><li><p>Day1 T1：可持久化 01 Trie 的 <code>copy</code> 敲太快，复制时候的 size 设置写错，最后数据水拿到了 $85$：</p><p><code>c[rt].sz=c[lst].sz+1</code> 写成 <code>c[rt].sz=1</code> ，考场没找出来。</p></li><li><p>Day1 T2：把后缀树的性质想成了 SAM 本身 DAG 的性质，直接在 SAM 上连边直接爆零。</p></li><li><p>Day1 T3：最后交卷前 5min 才开始看后面的点，来不及写。</p></li><li><p>Day2 T1：考场想出来状态设计，想了想转移复杂度不对，就放过去了。</p></li><li><p>Day2 T2：想到了正解的贪心，觉得左侧多个子节点合并到右侧一个子节点中会挂掉，于是打暴力。</p></li></ul><p>最后反过来想想自己的水平确实没有达到 Day2 T1, Day2 T3 这种题的要求，考挂在情理之中。</p><p>第二天出考场的时候大概也是释然了吧，出考场的时候几位教练都在紧张的看着我下楼。</p><p>我看到了妈妈在笑着看着我，我就笑了，老师们也就突然笑了，拍拍肩膀，一切都过去了。</p><hr><p>并没有买 D。</p><p>心里的担子就这么卸下去了，放松自己的感觉真好啊。</p><p>还在机房的伙伴们加油啊！</p><br>]]></content>
      
      
      <categories>
          
          <category> Memoirs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MathJax Test</title>
      <link href="2019/04/03/mathjaxtest/"/>
      <url>2019/04/03/mathjaxtest/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.mathjax.org/">Beautiful math in all browsers - MathJax</a></p><p>终于配置好了满意的 MathJax，写一篇测试文档留作纪念。</p><a id="more"></a><h2 id="字符"><a href="#字符" class="headerlink" title="字符"></a>字符</h2><p>数学模式重音符</p><p>$$<br>\ \ \hat{a} \ \ \check{a} \ \ \tilde{a} \ \ \acute{a}<br>\ \ \grave{a} \ \ \dot{a} \ \ \ddot{a} \ \ \breve{a}<br>\ \ \bar{a} \ \ \vec{a} \ \ \widehat{A} \ \ \widetilde{A}<br>$$</p><p>小写希腊字母</p><p>$$<br>\ \ \alpha \ \ \theta  \ \ \upsilon<br>\ \ \beta \ \ \vartheta \ \ \pi \ \ \phi<br>\ \ \gamma \ \ \iota \ \ \varpi \ \ \varphi<br>\ \ \delta \ \ \kappa \ \ \rho \ \ \chi<br>\ \ \epsilon \ \ \lambda \ \ \varrho \ \ \psi<br>\ \ \varepsilon \ \ \mu \ \ \sigma \ \ \omega<br>\ \ \zeta \ \ \nu \ \ \varsigma<br>\ \ \eta \ \ \xi \ \ \tau<br>$$</p><p>大写希腊字母</p><p>$$<br>\ \ \Gamma \ \ \Lambda \ \ \Sigma \ \ \Psi<br>\ \ \Delta \ \ \Xi \ \ \Upsilon \ \ \Omega<br>\ \ \Theta \ \ \Pi \ \ \Phi<br>$$</p><p>二元关系表示符</p><p>$$<br>\ \ &lt;\ \  &lt;\ \  &gt;\ \  &gt;\ \  =\ \<br>\ \ \leq o\ \ \le \ \ \geq o\ \ \ge \ \ \equiv<br>\ \ \ll \ \ \gg \ \ \doteq<br>$$<br>$$<br>\ \ \prec \ \ \succ  \ \ \sim<br>\ \ \preceq \ \ \succeq \ \ \simeq<br>\ \ \subset \ \ \supset \ \ \approx<br>\ \ \subseteq \ \ \supseteq \ \ \cong<br>\ \ \sqsubset a \ \ \sqsupset  \ \ \Join<br>\ \ \sqsubseteq \ \ \sqsupseteq<br>$$<br>$$<br>\ \ \bowtie<br>\ \ \in \ \ \ni \ \ \owns \ \ \propto<br>\ \ \vdash \ \ \dashv |\ \ \models<br>\ \ \mid \ \ \parallel \ \ \perp<br>\ \ \smile \ \ \frown \ \ \asymp<br>\ \ : \ \ \notin \ \ \neq \ \ \ne<br>$$</p><p>二元运算符<br>$$<br>+\ \  −\ \  -<br>\ \ \pm \ \ \mp \ \ \triangleleft<br>\ \ \cdot \ \ \div \ \ \triangleright<br>\ \ \times\ \ \setminus \ \ \star<br>\ \ \cup \ \ \cap \ \ \ast<br>\ \ \sqcup \ \ \sqcap \ \ \circ<br>\ \ \vee \ \ \lor \ \ \wedge<br>$$<br>$$<br>\land \ \ \bullet<br>\ \ \oplus \ \ \ominus \ \ \diamond<br>\ \ \odot \ \ \oslash \ \ \uplus<br>\ \ \otimes \ \ \bigcirc \ \ \amalg<br>\ \ \bigtriangleup \ \ \bigtriangledown \ \ \dagger<br>\ \ \lhd \ \ \rhd<br>\ \ \ddagger<br>\ \ \unlhd \ \ \unrhd<br>\ \ \wr<br>$$<br>大尺寸运算符<br>$$<br>\ \ \sum \ \ \bigcup \ \ \bigvee \ \ \bigoplus<br>\ \ \prod \ \ \bigcap \ \ \bigwedge \ \ \bigotimes<br>\ \ \coprod \ \ \bigsqcup \ \ \bigodot<br>\ \ \int \ \ \oint \ \ \biguplus<br>$$<br>箭头<br>$$<br>\leftarrow \ \ \gets \ \ \longleftarrow\ \ \uparrow\ \ \rightarrow \ \ \to \ \ \longrightarrow\ \ \downarrow\ \ \leftrightarrow \ \ \longleftrightarrow\ \ \updownarrow<br>$$<br>$$<br>\ \Leftarrow \ \ \Longleftarrow\ \ \Uparrow\ \ \Rightarrow\ \   \Longrightarrow\ \ \Downarrow \Leftrightarrow \ \ \Longleftrightarrow\ \ \Updownarrow<br>\ \ \mapsto \ \ \longmapsto\ \ \nearrow<br>$$<br>$$<br>\ \ \hookleftarrow \ \ \hookrightarrow\ \ \searrow\ \ \leftharpoonup\ \ \rightharpoonup\ \ \swarrow\ \ \leftharpoondown\ \ \rightharpoondown\ \ \nwarrow\ \ \rightleftharpoons \ \ \iff \ \ \leadsto<br>$$<br>定界符<br>$$<br>(\ \ ) \ \ \uparrow \ \ \Uparrow<br>\ \ \lbrack \ \ \rbrack \ \ \downarrow \ \ \Downarrow<br>\ \ { \ \ \lbrace \ \ } \ \ \rbrace \ \ \updownarrow \ \ \Updownarrow<br>\ \ \langle \ \ \rangle \ \ \vert \ \ \Vert<br>\ \ \lfloor \ \ \rfloor \ \ \lceil \ \ \rceil<br>\ \ \backslash<br>$$<br>其他符号<br>$$<br>\ \ \dots \ \ \cdots<br>\ \ \vdots<br>\ \ \ddots<br>\ \ \hbar \ \ \imath \ \ \jmath \ \ \ell<br>\ \ \Re \ \ \Im \ \ \aleph \ \ \wp<br>\ \ \forall \ \ \exists \ \ \mho  \ \ \partial<br>\ \ \prime \ \ \emptyset<br>$$<br>$$<br>\infty<br>\ \ \nabla \ \ \triangle \ \ \Box \ \ \Diamond<br>\ \ \bot \ \ \top \ \ \angle \ \ \surd<br>\ \ \diamondsuit \ \ \heartsuit \ \ \clubsuit \ \ \spadesuit<br>\ \ \neg \ \ \lnot \ \ \ \ \natural \ \ \sharp<br>$$</p><h2 id="行内公式"><a href="#行内公式" class="headerlink" title="行内公式"></a>行内公式</h2><blockquote><p>有 $n$ 只鼠，白兔用 $n - 1$ 根蓝色绳子把它们连成了一棵树，每根蓝色绳子连着两只鼠，白云用 $n - 1$ 根红色绳子把它们连成了一棵树，每根红色绳子连接着两只鼠。</p><p>白云要给予每只鼠一个数。这个数可以是 $[1, y]$ 中的任意一个整数。</p><p>白兔给了白云一个要求：对于两只鼠 $p, q$，若存在一条连接这两只鼠的路径同时属于这两棵树，则 $p$ 和 $q$ 必须被给予相同的整数。存在一条路径同时属于这两棵树指的是：存在一个序列 $(a_1 = p, a_2, \cdots , a_m = q)$，使得：对于所有 $i \in [1, m - 1]$，都有 $a_i$ 和 $a_{i+1}$ 既有一根红色绳子直接相连也有一根蓝色绳子直接相连。</p></blockquote><h2 id="块状公式"><a href="#块状公式" class="headerlink" title="块状公式"></a>块状公式</h2><p>$$<br>\int \frac{dx}{cos^2x}=\int sec^2xdx=tan x+C\<br>$$</p><p>$$<br>\int \frac{dx}{sin^2x}=\int csc^2xdx=-cot x+C\<br>$$</p><p>$$<br>\sum\limits_{i = 0}^{E} w[i]{M \choose i} {N \choose iS} \frac{(iS)!}{(S!)^{i}} \sum\limits_{j = 0}^{E - i} (-1)^{j} {M - i \choose j} {N - iS \choose jS} \frac{(jS)!}{(S!)^{j}} (M - i - j)^{N - iS - jS}<br>$$<br>$$<br>= \sum\limits_{i = 0}^{E} w[i]{M \choose i} {N \choose iS} \frac{(iS)!}{(S!)^{i}} \sum\limits_{j = i}^{E} (-1)^{j - i} {M - i \choose j - i} {N - iS \choose jS - iS} \frac{(jS - iS)!}{(S!)^{j - i}} (M - j)^{N - jS}<br>$$</p><h2 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h2><p>$$<br>\begin{bmatrix}<br>(\omega_n^0)^0 &amp; (\omega_n^0)^1 &amp; \cdots &amp; (\omega_n^0)^{n-1}\\ (\omega_n^1)^0 &amp; (\omega_n^1)^1 &amp; \cdots &amp; (\omega_n^1)^{n-1}\\<br>\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\<br>(\omega_n^{n-1})^0 &amp; (\omega_n^{n-1})^1 &amp; \cdots &amp; (\omega_n^{n-1})^{n-1}<br>\end{bmatrix}<br>\begin{bmatrix}<br>a_0 \\<br>a_1 \\<br>\vdots \\<br>a_{n-1}<br>\end{bmatrix}<br>=<br>\begin{bmatrix}<br>A(\omega_n^0) \\<br>A(\omega_n^1) \\<br>\vdots \\<br>A(\omega_n^{n-1})<br>\end{bmatrix}<br>$$</p><p>$$<br>\begin{bmatrix}<br>a_0 \\<br>a_1 \\<br>\vdots \\<br>a_{n-1}<br>\end{bmatrix}<br>=<br>\frac{1}{n}<br>\begin{bmatrix}<br>(\omega_n^{-0})^0 &amp; (\omega_n^{-0})^1 &amp; \cdots &amp; (\omega_n^{-0})^{n-1} \\<br>(\omega_n^{-1})^0 &amp; (\omega_n^{-1})^1 &amp; \cdots &amp; (\omega_n^{-1})^{n-1} \\<br>\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\<br>(\omega_n^{-(n-1)})^0 &amp; (\omega_n^{-(n-1)})^1 &amp; \cdots &amp; (\omega_n^{-(n-1)})^{n-1}<br>\end{bmatrix}<br>\begin{bmatrix}<br>A(\omega_n^0) \\<br>A(\omega_n^1) \\<br>\vdots \\<br>A(\omega_n^{n-1})<br>\end{bmatrix}<br>$$</p><br>]]></content>
      
      
      
        <tags>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Goodbye Wuxu</title>
      <link href="2019/02/05/goodbye-wuxu/"/>
      <url>2019/02/05/goodbye-wuxu/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>戊戌狗年结束了，这一年的生活还算顺利。</p><p>上下求索的过程中，一次次的走进迷茫，再从迷茫中回到自己。</p><p>尽人事，知天命。新的一年加油。</p><a id="more"></a><h2 id="大事记"><a href="#大事记" class="headerlink" title="大事记"></a>大事记</h2><p>Mar.  写了转入三三的申请。给十六留下了粗糙的值周记录PPT。</p><p>Apr.  转入三三。省选划水，最后是非正式 rank15。</p><p>May.  花了两天时间研究了 Hexo，采用的 Next 主题。</p><p>Jun.  人生第一次过集体生日。</p><p>Jul.  NOI 同步赛 Spfa 被卡。在洛谷出的比赛过审了，正解被爆踩。</p><p>Aug.  把 Dev-C++ 换了 Atom 。</p><p>Nov.  NOIP 2018 差点被送退役。</p><p>Dec.  参加学考。简单学了点 LaTeX 。</p><p>Jan. 参加 CCPC-Wannafly Winter Camp。</p><h2 id="一些话"><a href="#一些话" class="headerlink" title="一些话"></a>一些话</h2><p>随便写点还记得的东西，想到哪里就写些什么了。</p><p>嘴上常挂着 “不忘初心 ”，但是做了不少表面文章，做了不少不懂装懂的傻事。</p><p>有的事情总是呆在 Todo List 上，但是一直不去碰，或是看了两下就把它扔回去，等到下决心去搞了，也有几次搞到一半因为奇奇怪怪的原因放弃了。但这些东西还老是堆在心里一直想着，列的 deadline 也总是咕掉。</p><p>花哨的东西却认认真真搞了不少，几度沉沦于形式的简约和规范，甚至是操作界面的美观。</p><p>很多东西浅尝辄止，只学了一个开头，就去做做水题装作很懂的样子，过了一段时间发现学的不透，又会回来重新再看一遍，反反复复。</p><p>OI 从上半年起逐渐成了生活的主线。但是好多时候不知道事情从哪里下手，或者希望渺茫。</p><p>这段时间 OI 以外的生活过的还是比较愉快的，经历了值周，换班，听到了想听的课，见识了很强的同学们和新鲜的思路。但是精力渐渐不太放在文化课上了，好多该刷题的东西一直放着，下课就想往机房跑，到期末还是不怎么会做动量和电解池的题。</p><p>OI 上也没有踏实下来吃透些什么，该学的东西不知道为什么也一直在拖，逐渐的变成了回避，躲避，沉默，每遇到了这些知识点的话题。这种感觉就像个瘤，它就长在你的心上，但是你就是不会碰它，越长越大压得喘不过气来。</p><p>过了生日之后，某一个晚上给父母写了点东西。现在看当时略显稚气的信里并没有说出来什么深处的东西，但还是借此给自己打打气，当时的感觉是 “有所成长” ，也算在那个时期拉了自己一把，OI 开始有些起色。</p><p>NOIP 前的三个月或许是到现在为止最拼的一段时间吧。那段时间压力比较大，也收获了很多感动。</p><p>第一次停课也是很新鲜。但状况也不容乐观，好多东西还停留在认识的阶段，有段时间甚至接近崩溃。万幸的是有 Luan 能陪我挺过那段时间，互相交流，心情也逐渐变得乐观起来，工作比较高效。感觉自己能挺过那段时间也是挺神奇，一个多月学了之前落下的好多东西，还能挺住比较密集的考试。我要感谢 Luan，我都不敢想象没了他跟我交流现在我会是什么样子。</p><p>那段时间的生活过的比较平淡，但是充实。还不是太冷的时候跑了几次步，聂老师带着队，第一次没停下跑完了二南外圈 2km。</p><p>NOIP 的事情不想说太多了，以前也写过东西。分别是必然的，但很多意料之外的事情让人很痛苦。</p><p>学考之后这段时间过的比较平凡。事情变得开朗一些。</p><p>突击学考算是一种比较奇妙的体验吧。当整天整天的摸不到键盘的时候，就会坐不住，开始知道自己已经离不开了。教学楼里有趣的事情倒是不少，少见的感受到了陈日红主任的亲民，趁着自习的时候也可以偷着拜读一下渡边先生的大作了。</p><p>去不了 NOIWC 的事情也是早就准备好的，能去 CCPC-Wannafly Winter Camp 算是一个惊喜吧，以大学生的视角看算法竞赛也是一种体验。搞到了自己的域名也算是了了一桩心事，以后颓废的时候可能会开发一下。</p><p>大家都好厉害啊。逐渐发现自己站位有些低，或许该多想想远一些的事情。</p><p>希望新的一年自己能专注一些，注意自律，做些务实的事情。</p><br>]]></content>
      
      
      <categories>
          
          <category> Memoirs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NOIP 2018</title>
      <link href="2018/12/08/noip2018/"/>
      <url>2018/12/08/noip2018/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>纪念高中 OI 的第一次正式比赛。</p><p><strong>飞雪连天射白鹿，笑书神侠倚碧鸳。</strong></p><a id="more"></a><h2 id="Day-1"><a href="#Day-1" class="headerlink" title="Day -1"></a>Day -1</h2><p>离考试越近自己越静不下来</p><p>中午一点到了石家庄站，今年还是在燕大</p><p>等车的时候发现不会在虚拟机里编译，慌张问了一波</p><p>上火车之后被换座到了1A（ $\text{poisonous milk} \times 1$</p><p>颓的时候看见旁边两位爷开始离线切题 太强了太强了</p><h2 id="Day-0"><a href="#Day-0" class="headerlink" title="Day 0"></a>Day 0</h2><p>早上起来被教练通知又要考一场模拟赛。T3 只会 $60$ 暴力，然后事后诸葛…</p><p>下午试机。耍无赖苟在那里将近一个小时，最后只是敲了链剖和倍增互拍，还拍挂了慌慌慌。</p><p>晚上学长说注意事项，感觉讲的东西都没听说过。回去之后和 ZH 一起梳理了知识点，感觉不错。</p><p>睡觉的时候外面有跑步和喊叫的声音，以及午夜凶铃。以为是初中的 <del>后来得知是高一学长</del>。</p><h2 id="Day-1-1"><a href="#Day-1-1" class="headerlink" title="Day 1"></a>Day 1</h2><p>今天在燕大 1 机房，座位在前排角落，周围目测是友善的高一学长。</p><p>开题发现<code>i7-8700K</code> 以及 <code>512M</code> ，非常资瓷啊，再也不怕常数大了…</p><p>T1 确认完题意就会做了。 在<code> 首尾相接</code> 上纠结了一会，发现样例解释不了环，就放心写了。</p><p>T2 读了两遍题，感觉有点难。玩样例发现选的都是原来就有的数，觉得有些蹊跷。冷静了一下，分情况讨论证明这个结论是对的，然后就得到了排序之后用背包贪心的解法。</p><p>T3 明白了问题模型之后，发现不会找树上一堆链，开始看部分分。发现简单的子任务合起来就有 $55$ 了，于是先写了这些点，解法分别是树的直径，所有边长取最小值，正常的二分答案+验证，以及二分答案+双指针。</p><p>然后上个厕所冷静了一下，回来发现可以用树形 DP 搞。几次 WA 和 死循环 之后，找了好多反例，高度紧张的状态下在 11:40 的时候终于码完了，应该是我人生中第一个考场 $200+$行吧。测了一发大样例没有 TLE ，肉眼比对第一页没锅，打开<code>cmd</code> ，<code>fc track.out track3.ans</code>，<code>FC: 找不到差异</code>，突然觉得全世界都清静了。</p><p>下午在宾馆里看板子，晚上十点多就睡了。意外的睡得不错。</p><h2 id="Day-2"><a href="#Day-2" class="headerlink" title="Day 2"></a>Day 2</h2><p>今天在燕大 4 机房，座位在正中间，前面是 zyz 后面是 czy ，旁边的老哥看起来不是很友好。</p><p>T1 开始以为是最小字典序拓扑序，写完过不了样例，发现读错题了，应该是是 DFS 序。想起来还没有看数据范围，看完发现是基环树。发现 $60$ 很好写，$100$ 只会平方复杂度，因为用的是邻接矩阵，感觉写起来很麻烦就先撂下了。</p><p>T2 题面太长就先做的 T3 。NOIP 前写过一道题 [SDOI2006] 保安站岗 长得很像。<strong>我就把边覆盖读成了点覆盖</strong>，十分自信地码完了 $44$ 的暴力，<strong>竟然过了样例</strong>，然后就十分自信地去搞 T2 了。</p><p>T2 明确题意后写了状压路径的 $20$ 暴力，开始找规律。发现和前不久 CodeForces 的 一道 D 题可能有一样的思路，每一条斜线上只要只是一段前缀 $1$ 就合法了，因为每一条斜线上的点在字典序列位置相同。然后推了个公式带进去发现算的不对。找了很久没有发现原因，只好把不合法情况打出来，发现两条交错路径就凉了。尝试状压斜线，发现不会转移，只好暴力把表打出来算了。打的时候发现了一些规律，但是对 $n&gt;4$ 并不适用，就只打了前 $65$ 。</p><p>回去赶 T1 ，思路混乱，发现得把邻接矩阵存改回邻接表。写完发现跑不出来，慌了，把 T1 $60$ 的代码和另外两道题先打了包。到最后都没有调出来，最后收卷的时候头脑一片空白。</p><p>下午去看海，照了合影。我和 Luan 在沙滩上留下手划出来的字，写了 <code>NEXT YEAR GOTO NOI 2019</code> 。</p><p>返程火车上老师把代码发下来了，交到洛谷上 $60+65+0=125$ 恍恍惚惚，比预想的还要糟糕，没有再和教练说什么。晚上机房泡面party，聊天时终于发现自己读错题的事实。</p><h2 id="Day-n"><a href="#Day-n" class="headerlink" title="Day n"></a>Day n</h2><p>几个晚上都在想，如果 Day2T1 码出来，或者 Day2T3 没读错题就能加上四十多。</p><p>民间数据在 HE 大概 rank 30+ ，我还是想接着学的啊。</p><p>最后拿到了成绩，跟洛谷上测出来成绩差不多。</p><p>$100+100+95+60+65+0=420$</p><p>最后 HE rank 40+，几经折腾可以留下来准备省选了。</p><h2 id="Summaries"><a href="#Summaries" class="headerlink" title="Summaries"></a>Summaries</h2><p>稍微多说两句。</p><p>不要期望超常发挥，正常发挥就是最大的幸运。</p><p>心态要平衡，OI 两天的赛制也考验心态。之所以会出现低级错误，就是考场上想得太多。<strong>考场上不要想之前考的怎么样，认真做题就是最大的成功。</strong></p><p>后面已经有赌的成分了，立一些 Flag 激励自己。</p><ul><li>少看游记少颓废</li><li>省选阶段模拟赛能搞懂的题都改完写题解</li><li>做掉尽可能多的近 $5$ 年内各地省选题</li><li>把能打的不是猝死场的 CodeForces 都打了，赛后补题解</li></ul><br> ]]></content>
      
      
      <categories>
          
          <category> Memoirs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2018/11/29/hello-world/"/>
      <url>2018/11/29/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>「 Hello, the lovely world. 」</p><p>「 Stay hungry, Stay foolish. 」</p><a id="more"></a><hr><blockquote><p>Beautiful is better than ugly.</p><p>Explicit is better than implicit.</p><p>Simple is better than complex.</p><p>Complex is better than complicated.</p><p>Flat is better than nested.</p><p>Sparse is better than dense.</p><p>Readability counts.</p><p>Special cases aren’t special enough to break the rules.</p><p>Although practicality beats purity.</p><p>Errors should never pass silently.</p><p>Unless explicitly silenced.</p><p>In the face of ambiguity, refuse the temptation to guess.</p><p>There should be one– and preferably only one –obvious way to do it.</p><p>Although that way may not be obvious at first unless you’re Dutch.</p><p>Now is better than never.</p><p>Although never is often better than <strong>right</strong> now.</p><p>If the implementation is hard to explain, it’s a bad idea.</p><p>If the implementation is easy to explain, it may be a good idea.</p><p>Namespaces are one honking great idea – let’s do more of those!</p></blockquote><br>]]></content>
      
      
      
        <tags>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
